% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/0docs.R, R/add_ancestors.R, R/add_db.R,
%   R/add_hoverboxes.R, R/add_ontology_metadata.R
\name{add_}
\alias{add_}
\alias{add_ancestors}
\alias{add_db}
\alias{add_hoverboxes}
\alias{add_ontology_metadata}
\title{Add functions}
\usage{
add_ancestors(ont, lvl = 2, include_self = TRUE, force_new = FALSE)

add_db(
  dat,
  input_col,
  output_col = paste0(input_col, "_db"),
  split = ":",
  keep = 1
)

add_hoverboxes(
  g,
  columns = get_graph_colnames(g),
  hoverbox_column = c("hover", "title", "label"),
  width = 60,
  digits = 3,
  decorators = c("<b>", "</b>"),
  as_html = TRUE,
  force_new = FALSE
)

add_ontology_metadata(
  ont,
  add_ancestors = 2,
  add_n_edges = TRUE,
  add_ontology_levels = TRUE
)
}
\arguments{
\item{ont}{An ontology of class \link[simona]{ontology_DAG}.}

\item{lvl}{Depth of the ancestor terms to add. 
Will get the closest ancestor to this level if none have this exact level.}

\item{include_self}{For \code{dag_offspring()} and \code{dag_ancestors()}, this controls whether to also include the query term itself.}

\item{force_new}{Add the data again even if the associated column already 
exists.}

\item{dat}{data.table or tbl_graph.}

\item{input_col}{Column containing IDs.}

\item{output_col}{Column to add.}

\item{split}{
    character vector (or object which can be coerced to such)
    containing \link[base]{regular expression}(s) (unless \code{fixed = TRUE})
    to use for splitting.  If empty matches occur, in particular if
    \code{split} has length 0, \code{x} is split into single characters.
    If \code{split} has length greater than 1, it is re-cycled along
    \code{x}.
  }

\item{keep}{Specify indices corresponding to just those list elements to retain in the transposed result. Default is to return all.}

\item{g}{ggnetwork object 
(or an igraph/tbl_graph to be converted to ggnetwork format).}

\item{columns}{Character vector of column names to include in the hoverbox.}

\item{hoverbox_column}{Name of the new hoverbox column to add.}

\item{width}{Positive integer giving target line width (in number of
characters). A width less than or equal to 1 will put each word on its
own line.}

\item{digits}{integer indicating the number of decimal places
    (\code{round}) or significant digits (\code{signif}) to be used.
    For \code{round}, negative values are allowed (see \sQuote{Details}).}

\item{decorators}{Left and right decorators to add to the hoverbox titles.}

\item{as_html}{Provide the hoverbox in HTML format.}

\item{add_ancestors}{Add ancestors for each term.}

\item{add_n_edges}{Add the number of edges (connections) for each term.}

\item{add_ontology_levels}{Add the ontology level for each term.}
}
\value{
Added data.

tidygraph with additional metadata column named "hover".
}
\description{
Functions to add extra metadata to an ontology or data.table object.
}
\section{Functions}{
\itemize{
\item \code{add_ancestors()}: add_
Add ancestor

For each term, get its ancestor at a given level
and add the ID and name of the ancestor to the ontology metadata.
By default, lower numbers are higher in the ontology
 (e.g. level 0 includes the most broad ontology term).
When a terms does not have an ancestor at a given level
 (e.g. \code{lvl=3} but the term itself is at level 1) the term is assigned
  to itself as its own ancestor.
When a term has multiple ancestors at a given level, 
the first ancestor is arbitrarily chosen.

\item \code{add_db()}: add_
Extract a database identifier from an ID column and add it
as a separate column.

\item \code{add_hoverboxes()}: add_
Add hoverboxes

A hoverbox is a box of text that shows up when the cursor
 hovers over something.
These can be useful when making interactive network plots
of the HPO phenotypes because we can include a hoverbox that gives
information and data associated with each phenotype.

\item \code{add_ontology_metadata()}: add_

Add per-term metadata to ontology.

}}
\examples{
ont <- get_ontology("hpo")
ont2 <- add_ancestors(ont)
ont <- get_ontology("hpo", terms=10)
g <- ontology_to(ont, to="tbl_graph")
g2 <- add_hoverboxes(g)
ont <- get_ontology("hpo", terms=10)
ont2 <- add_ontology_metadata(ont)
}
\concept{add_}
