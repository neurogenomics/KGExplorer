% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/0docs.R, R/map_colors.R, R/map_genes_monarch.R,
%   R/map_medgen.R, R/map_mondo.R, R/map_ontology_terms.R, R/map_upheno.R,
%   R/map_variants.R
\name{map_}
\alias{map_}
\alias{map_colors}
\alias{map_genes_monarch}
\alias{map_medgen}
\alias{map_mondo}
\alias{map_ontology_terms}
\alias{map_upheno}
\alias{map_variants}
\title{Map functions}
\source{
https://data.monarchinitiative.org/upheno2/current/qc/index

https://data.monarchinitiative.org/upheno2/current/upheno-release/all/index.html
}
\usage{
map_colors(
  dat,
  columns = NULL,
  as = c("vector", "dict", "name", "function"),
  what = "nodes",
  preferred_palettes = NULL
)

map_genes_monarch(
  dat,
  gene_col,
  as_graph = methods::is(dat, "tbl_graph"),
  map_by_merge = FALSE,
  all.x = FALSE
)

map_medgen(dat, input_col, ...)

map_mondo(
  dat,
  input_col = "id",
  output_col = "mondo_id",
  to = "mondo",
  map_types = NULL,
  map_to = NULL,
  top_n = NULL,
  add_name = TRUE,
  add_definitions = TRUE,
  all.x = TRUE,
  allow.cartesian = FALSE,
  save_dir = cache_dir()
)

map_ontology_terms(
  ont,
  terms = NULL,
  to = c("name", "id", "short_id"),
  keep_order = TRUE,
  invert = FALSE,
  ignore_case = TRUE,
  ignore_char = c("-", "/", ",", "\\\\."),
  verbose = 1
)

map_upheno(
  pheno_map_method = c("upheno", "monarch"),
  gene_map_method = c("monarch"),
  filters = list(db1 = "HP", gene_taxon_label1 = "Homo sapiens"),
  terms = NULL,
  fill_scores = NULL,
  show_plot = TRUE,
  force_new = FALSE,
  save_dir = cache_dir()
)

map_variants(
  gr,
  build = c("GRCh37", "GRCh38"),
  upstream = 2000L,
  downstream = 200L,
  keep_chr = paste0("chr", c(seq_len(22), "X", "Y")),
  ignore.strand = TRUE
)
}
\arguments{
\item{dat}{\link[data.table]{data.table} with genes.}

\item{columns}{Names of columns to map colour palettes to.}

\item{as}{A character string specifying the format to convert to.}

\item{what}{What should get activated? Possible values are \code{nodes} or
\code{edges}.}

\item{preferred_palettes}{Preferred palettes to use for each column.}

\item{gene_col}{Name of the gene column in \code{dat}.}

\item{as_graph}{Return the object as a \link[tidygraph]{tbl_graph}.}

\item{map_by_merge}{Map orthologs by merging the node data such that the 
orthologous genes will appear as a new column (\code{TRUE}). 
Otherwise, the orthologs will be added as new nodes to the graph 
(\code{FALSE}).}

\item{all.x}{logical; if \code{TRUE}, rows from \code{x} which have no matching row
in \code{y} are included. These rows will have 'NA's in the columns that are usually
filled with values from \code{y}. The default is \code{FALSE} so that only rows with
data from both \code{x} and \code{y} are included in the output.}

\item{input_col}{Column name of input IDs.}

\item{...}{
  Arguments passed on to \code{\link[=map_mondo]{map_mondo}}
  \describe{
    \item{\code{}}{}
  }}

\item{output_col}{Column name of output IDs.}

\item{to}{Character vector of database(s) to map IDs to.
When not \code{"mondo"}, can supply multiple alternative databases to map to
 (e.g. \code{c("OMIM","Orphanet","DECIPHER")}).}

\item{map_types}{Mapping types to include.}

\item{map_to}{Mapping outputs to include
(from Mondo IDs to another database's IDs).}

\item{top_n}{Top number of mappings to return per \code{top_by} grouping.
Set to \code{NULL} to skip this step.}

\item{add_name}{Logical, if TRUE, add mondo name column.}

\item{add_definitions}{logical, if TRUE, add mondo definition column.}

\item{allow.cartesian}{See \code{allow.cartesian} in \code{\link[data.table]{[.data.table}}.}

\item{save_dir}{Directory to save cached data.}

\item{ont}{An ontology of class \link[simona]{ontology_DAG}.}

\item{terms}{A subset of HPO IDs to include in the final dataset and plots
(e.g. c("HP:0001508","HP:0001507")).}

\item{keep_order}{Return a named list of the same length and order
as \code{terms}.
If \code{FALSE}, return a named list of only the unique \code{terms},
sometimes in a different order.}

\item{invert}{Invert the keys/values of the dictionary,
such that the key becomes the values (and vice versa).}

\item{ignore_case}{Ignore case when mapping terms.}

\item{ignore_char}{A character vector of characters to ignore when 
mapping terms.}

\item{verbose}{Print messages.}

\item{pheno_map_method}{Method to use for mapping phenotypes across ontologies.
\itemize{
\item{"upheno"}{Use uPheno's phenotype-to-phenotype mappings.
 Contains fewer ontologies but with greater coverage of phenotypes.}
\item{"monarch"}{Use Monarch's phenotype-to-phenotype mappings.
Contains more ontologies but with less coverage of phenotypes.
}
}}

\item{gene_map_method}{Method to use for mapping genes across species.
\itemize{
\item{"monarch"}{Use Monarch's gene-to-gene mappings.}
}}

\item{filters}{A named list, where each element in the list is the name of 
a column in the data, and the vector within each element represents the 
values to include in the final data.}

\item{fill_scores}{Fill missing scores in the "equivalence_score" and
"subclass_score" columns with this value. These columns represent the
quality of mapping between two phenotypes on a scale from 0-1.}

\item{show_plot}{Show the plot.}

\item{force_new}{Create a new file instead of using any cached files.}

\item{gr}{A \link[GenomicRanges]{GRanges} object.}

\item{build}{Genome build to use when mapping genomic coordinates.}

\item{upstream, downstream}{
    Single \code{integer} values representing the number of base pairs 
    upstream of the 5'-end and downstream of the 3'-end. Used in contructing 
    \code{PromoterVariants()} and \code{IntergenicVariants()} objects only.
  }

\item{keep_chr}{Which chromosomes to keep.}

\item{ignore.strand}{A \code{logical} indicating if strand should be
    ignored when performing overlaps.
  }
}
\value{
Mapped data.

Mapped \code{dat}

Character vector.

A list containing the data and plot.
}
\description{
Functions to map IDs across ontologies/databases.
}
\section{Functions}{
\itemize{
\item \code{map_colors()}: map_

\item \code{map_genes_monarch()}: map_
Map Monarch genes

Map Monarch gene IDs to HGNC gene symbols, within or across species.

\item \code{map_medgen()}: map_
Map Medgen.

\item \code{map_mondo()}: map_
Map to/from mondo IDs

\item \code{map_ontology_terms()}: map_
Map ontology terms to an alternative name.

Harmonise a mixed vector of term names (e.g. "Focal motor seizure")
and term IDs (e.g. c("HP:0000002","HP:0000003")).

\item \code{map_upheno()}: map_
Map phenotypes across uPheno

Map phenotypes across species within the Unified Phenotype Ontology (uPheno).
First, gathers phenotype-phenotype mappings across ontologies.
Next, gathers all phenotype-gene associations for each ontology,
converts all genes to human HGNC orthologs, and computes the number of
overlapping orthologs between all pairs mapped phenotypes.
Finally, plots the results as the proportion of intersecting genes between
all pairs of phenotypes.

\item \code{map_variants()}: map_

}}
\examples{
colors <- map_colors(dat=mtcars, columns=c("cyl","gear"), preferred="viridis")
dat <- example_dat("gene")
dt2 <- map_genes_monarch(dat=dat, gene_col="gene")
dat <- example_dat(rm_types="gene")
dat2 <- map_mondo(dat = dat, map_to="hpo")
ont <- get_ontology("hp")
terms <- c("Focal motor seizure",
            "Focal MotoR SEIzure",
            "Focal-motor,/seizure.",
            "HP:0000002","HP:0000003")
term_names <- map_ontology_terms(ont=ont, terms=terms)
term_ids <- map_ontology_terms(ont=ont, terms=terms, to="id")
\dontrun{
res <- map_upheno()
}
if(interactive()){
gr <- GenomicRanges::GRanges("1:100-10000")
hits <- map_variants(gr)
}
}
\concept{map_}
