% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_bg.R
\name{get_bg}
\alias{get_bg}
\title{Get background genes}
\usage{
get_bg(
  species1 = "human",
  species2 = "human",
  method = "gprofiler",
  save_dir = tools::R_user_dir(package = "MultiEWCE", which = "cache"),
  overwrite = FALSE,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{species1}{First species.}

\item{species2}{Second species.}

\item{method}{R package to use for gene mapping:
\itemize{
\item{\code{"gprofiler"} : Slower but more species and genes.}
\item{\code{"homologene"} : Faster but fewer species and genes.}
\item{\code{"babelgene"} : Faster but fewer species and genes.
Also gives consensus scores for each gene mapping based on a
 several different data sources.}
}}

\item{save_dir}{Directory to save data to.}

\item{overwrite}{Should any local files of the same name be overwritten?
default \code{TRUE}.}

\item{verbose}{Print messages.}

\item{...}{
  Arguments passed on to \code{\link[orthogene:create_background]{orthogene::create_background}}
  \describe{
    \item{\code{output_species}}{Species to convert all genes from 
\code{species1} and \code{species2} to first.
 \code{Default="human"}, but can be to either any species
  supported by \pkg{orthogene}, including 
 \code{species1} or \code{species2}.}
    \item{\code{as_output_species}}{Return background gene list as 
\code{output_species} orthologs, instead of the
 gene names of the original input species.}
    \item{\code{use_intersect}}{When \code{species1} and \code{species2} are both
different from \code{output_species}, this argument will determine whether 
to use the intersect (\code{TRUE}) or union (\code{FALSE}) of all genes
from \code{species1} and \code{species2}.}
    \item{\code{bg}}{User supplied background list that will be returned to the 
user after removing duplicate genes.}
    \item{\code{gene_map}}{User-supplied \code{gene_map} data table from
\link[orthogene]{map_orthologs} or \link[orthogene]{map_genes}.}
    \item{\code{non121_strategy}}{How to handle genes that don't have
1:1 mappings between \code{input_species}:\code{output_species}.
Options include:\cr
\itemize{
\item{\code{"drop_both_species" or "dbs" or 1} : \cr}{
Drop genes that have duplicate
mappings in either the \code{input_species} or \code{output_species} \cr
(\emph{DEFAULT}).}
\item{\code{"drop_input_species" or "dis" or 2} : \cr}{
Only drop genes that have duplicate
mappings in the \code{input_species}.}
\item{\code{"drop_output_species" or "dos" or 3} : \cr}{
Only drop genes that have duplicate
mappings in the \code{output_species}.}
\item{\code{"keep_both_species" or "kbs" or 4} : \cr}{
Keep all genes regardless of whether
they have duplicate mappings in either species.}
\item{\code{"keep_popular" or "kp" or 5} : \cr}{
Return only the most "popular" interspecies ortholog mappings.
 This procedure tends to yield a greater number of returned genes
 but at the cost of many of them not being true biological 1:1 orthologs.}
 \item{\code{"sum","mean","median","min" or "max"} : \cr}{
 When \code{gene_df} is a matrix and \code{gene_output="rownames"},
  these options will aggregate many-to-one gene mappings
  (\code{input_species}-to-\code{output_species})
  after dropping any duplicate genes in the \code{output_species}.
 }
}}
  }}
}
\value{
A vector of background genes.
}
\description{
Generate background genes given one or more species.
Caches the list to avoid excessive API calls to
\href{https://biit.cs.ut.ee/gprofiler}{g:Profiler}.
}
\examples{
bg <- get_bg()
}
